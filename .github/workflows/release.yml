name: Release libfuzzer-dotnet

on:
  workflow_dispatch:
  push:
    branches: ["master"]
    paths:
      - 'libfuzzer-dotnet-windows.cc'
      - 'libfuzzer-dotnet.cc'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: clang -fsanitize=fuzzer libfuzzer-dotnet-windows.cc -o libfuzzer-dotnet-windows.exe
      - uses: actions/upload-artifact@v3
        with:
          name: libfuzzer-dotnet
          path: libfuzzer-dotnet-windows.exe

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: clang -fsanitize=fuzzer libfuzzer-dotnet.cc -o libfuzzer-dotnet-ubuntu
      - uses: actions/upload-artifact@v3
        with:
          name: libfuzzer-dotnet
          path: libfuzzer-dotnet-ubuntu

  build-debian:
    runs-on: ubuntu-latest
    container: debian:bullseye

    steps:
      - uses: actions/checkout@v3
      - name: Download LLVM
        run: |
          apt-get update && apt-get install -y lsb-release wget software-properties-common gnupg
          add-apt-repository 'deb http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-16 main'
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          apt-get update && apt-get install -y clang-16 libfuzzer-16-dev llvm-16 llvm-16-dev
      - name: Build
        run: clang++-16 -fsanitize=fuzzer libfuzzer-dotnet.cc -o libfuzzer-dotnet-debian
      - uses: actions/upload-artifact@v3
        with:
          name: libfuzzer-dotnet
          path: libfuzzer-dotnet-debian

  release:
    runs-on: windows-latest
    needs: [build-windows, build-ubuntu, build-debian]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: libfuzzer-dotnet
      - name: Tag
        id: tag
        run: |
          $tag = "v" + (Get-Date).ToString("yyyy.MM.dd.HHmm")
          Add-Content -Path $env:GITHUB_OUTPUT -Value "tag=$tag"

          git config user.name "${GITHUB_REPOSITORY_OWNER}"
          git config user.email "${GITHUB_REPOSITORY_OWNER}@users.noreply.github.com"

          git tag -a $tag -m $tag ${GITHUB_SHA}
          git push origin $tag
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            libfuzzer-dotnet-windows.exe
            libfuzzer-dotnet-ubuntu
            libfuzzer-dotnet-debian
          tag_name: ${{ steps.tag.outputs.tag }}
